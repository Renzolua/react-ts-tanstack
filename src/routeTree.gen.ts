/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const TodoIndexLazyImport = createFileRoute('/todo/')()
const TodoIndexvalueLazyImport = createFileRoute('/todo/$indexvalue')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TodoIndexLazyRoute = TodoIndexLazyImport.update({
  path: '/todo/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/todo/index.lazy').then((d) => d.Route))

const TodoIndexvalueLazyRoute = TodoIndexvalueLazyImport.update({
  path: '/todo/$indexvalue',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/todo/$indexvalue.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/todo/$indexvalue': {
      id: '/todo/$indexvalue'
      path: '/todo/$indexvalue'
      fullPath: '/todo/$indexvalue'
      preLoaderRoute: typeof TodoIndexvalueLazyImport
      parentRoute: typeof rootRoute
    }
    '/todo/': {
      id: '/todo/'
      path: '/todo'
      fullPath: '/todo'
      preLoaderRoute: typeof TodoIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/todo/$indexvalue': typeof TodoIndexvalueLazyRoute
  '/todo': typeof TodoIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/todo/$indexvalue': typeof TodoIndexvalueLazyRoute
  '/todo': typeof TodoIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/todo/$indexvalue': typeof TodoIndexvalueLazyRoute
  '/todo/': typeof TodoIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/todo/$indexvalue' | '/todo'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/todo/$indexvalue' | '/todo'
  id: '__root__' | '/' | '/todo/$indexvalue' | '/todo/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TodoIndexvalueLazyRoute: typeof TodoIndexvalueLazyRoute
  TodoIndexLazyRoute: typeof TodoIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TodoIndexvalueLazyRoute: TodoIndexvalueLazyRoute,
  TodoIndexLazyRoute: TodoIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/todo/$indexvalue",
        "/todo/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/todo/$indexvalue": {
      "filePath": "todo/$indexvalue.lazy.tsx"
    },
    "/todo/": {
      "filePath": "todo/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
